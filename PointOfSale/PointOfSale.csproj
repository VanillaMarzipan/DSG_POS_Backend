<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptToolsVersion>3.3.1</TypeScriptToolsVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <DefineConstants Condition=" '$(IsElectron)' == 'true' ">$(DefineConstants);ELECTRONED</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <ApplicationInsightsResourceId>/subscriptions/98f767bd-d0d7-4699-acab-0dd799ce240d/resourcegroups/pos/providers/microsoft.insights/components/PointOfSale-DEV</ApplicationInsightsResourceId>
    <ApplicationInsightsAnnotationResourceId>/subscriptions/98f767bd-d0d7-4699-acab-0dd799ce240d/resourcegroups/pos/providers/microsoft.insights/components/PointOfSale-DEV</ApplicationInsightsAnnotationResourceId>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="Controllers\**" />
    <Content Remove="Controllers\**" />
    <EmbeddedResource Remove="Controllers\**" />
    <None Remove="Controllers\**" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="DSG.POS.Common.Enumerations" Version="0.1.18347.1" />
    <PackageReference Include="DSG.POS.PosRegisterManager.Models" Version="0.1.18313.2" />
    <PackageReference Include="DSG.POS.PosTransactionManager.Models" Version="0.1.18347.1" />
    <PackageReference Include="Flurl" Version="2.8.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.6.1" />
    <PackageReference Include="Microsoft.AspNetCore.App" Version="2.1.1" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.1" />
    <PackageReference Include="Pivotal.Discovery.ClientCore" Version="2.1.0" />
    <PackageReference Include="Pivotal.Extensions.Configuration.ConfigServerCore" Version="2.1.0" />
    <PackageReference Include="Steeltoe.Extensions.Configuration.CloudFoundryCore" Version="2.1.0" />
  </ItemGroup>
  <ItemGroup>
    <DotNetCliToolReference Include="ElectronNET.CLI" Version="0.0.9" />
  </ItemGroup>
  <ItemGroup>
    <None Update="manifest.yaml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
    <Folder Include="wwwroot\img\" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="electron.manifest.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Pages\Shared\Components\CashTendered\CashTendered.cshtml">
      <Pack>$(IncludeRazorContentInPack)</Pack>
    </Content>
    <Content Update="Pages\TenderComplete.cshtml">
      <Pack>$(IncludeRazorContentInPack)</Pack>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Connected Services" />
  </ItemGroup>
  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing Webpack build (DebugRunWebpack)..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Message Importance="high" Text="Performing Webpack build (PublishRunWebpack)..." />
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>